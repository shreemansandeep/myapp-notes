pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'GitHubCred', url: 'https://github.com/shreemansandeep/myapp-notes.git'
            }
        }
        
        stage('Build') {
            steps {
                sh 'npm install'
                sh 'npm run build'
            }
        }
        
        stage('Docker Build image and Tag'){
            steps{
                  sh 'docker image build -t $JOB_NAME:v1.$BUILD_ID .'
                  sh 'docker image tag $JOB_NAME:v1.$BUILD_ID dockersandheep/$JOB_NAME:v1.$BUILD_ID'
                  sh 'docker image tag $JOB_NAME:v1.$BUILD_ID dockersandheep/$JOB_NAME:latest'
            }
            }
            
            stage('Push image to Docker Hub'){
            steps{
                  withCredentials([string(credentialsId: 'DockerHpwd', variable: 'DockerHubPwd')]) {
                  sh 'docker login -u dockersandheep -p ${DockerHubPwd}'
                  sh 'docker push dockersandheep/$JOB_NAME:v1.$BUILD_ID'
                  sh 'docker push dockersandheep/$JOB_NAME:latest'
            }   
            }
            }  
            
            /*
           stage('Remove Docker Images') {
            steps {
                  sh 'docker rmi -f $(docker images -q)'
            }
            }
 
           stage('Deploying on EKS Cluster') {
            steps{
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'K8skubeconfig', namespace: '', restrictKubeConfigAccess: false, serverUrl: '') {
                sh "kubectl apply -f k8s-reactdepsvc.yml"
            }
            }
            } 
            */
            
            stage('Update Deployment File') {
            environment {
            GIT_REPO_NAME = "myapp-notes"
            GIT_USER_NAME = "shreemansandeep"
            }
            steps {
            withCredentials([string(credentialsId: 'GitHubToken', variable: 'GitHubToken')]) {
                sh '''
                    git config user.email "shreemansandeep@gmail.com"
                    git config user.name "shreemansandeep"
                    BUILD_NUMBER=v1.${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" k8sargo/k8sargo-manifest.yml
                    git add k8sargo/k8sargo-manifest.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GitHubToken}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                '''
                }
            }
        }
      
    }
}
